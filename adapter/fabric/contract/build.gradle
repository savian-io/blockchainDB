/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library-distribution'
}

// Define Variables
ext {
   jupiterVersion   = '5.6.0'
   mockitoVersion   = '3.3.3'
   cfg4jVersion     = '4.4.0'
   log4jVersion     = '2.13.3'
}

group 'de.trustdble.fabric.contract'
version '1.0-SNAPSHOT'

repositories {
    // Use jcenter for resolving dependencies.
    jcenter() 
    // You can declare any Maven/Ivy/file repository here.
    maven {
        url "https://hyperledger.jfrog.io/hyperledger/fabric-maven"
        url 'https://jitpack.io'
    }
    mavenCentral()
}

dependencies {   

	// Serialization
	implementation 'commons-codec:commons-codec:1.15'
    implementation 'com.google.code.gson:gson:2.9.0'
	 
    // Hyperledger Fabric chaincode
    implementation 'org.hyperledger.fabric-chaincode-java:fabric-chaincode-shim:2.3.0'

        
    // logging framework
    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    // configuration management
    implementation group: "org.cfg4j", name:"cfg4j-core", version: "${cfg4jVersion}"
	
     // testing frameworks
     testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
     testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
     testImplementation "org.mockito:mockito-core:${mockitoVersion}"
     testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
}


task fatJar(type: Jar) {
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 
    with jar
    }
